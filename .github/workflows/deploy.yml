name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main  # Trigger this workflow on push to main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Azure
      - name: Set up Azure credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to Azure Container Registry
      - name: Log in to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Create .env file
        run: |
          cd app 
          cat <<EOF > .env
          APP_ENV=production
          APP_KEY=${{ secrets.APP_KEY }}
          DB_CONNECTION=pgsql \
          DB_HOST=mypsqldb.postgres.database.azure.com \
          DB_PORT=5432 \
          DB_DATABASE=postgres \
          DB_USERNAME=laraadmin@mypsqldb \
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          EOF

      # Step 4: Set build image tag
      - name: Set Image Tag
        id: vars
        run: echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)-${{ github.sha }}" >> $GITHUB_ENV

      # Step 5: Build the Docker image
      - name: Build Docker image
        run: |
          cd app
          docker build -t ${{ secrets.ACR_SERVER }}/${{ secrets.CONTAINER_APP_NAME }}:${{env.IMAGE_TAG}} .

      # Step 6: Push the image to ACR
      - name: Push Docker image to ACR
        run: |
          cd app
          docker push ${{ secrets.ACR_SERVER }}/${{ secrets.CONTAINER_APP_NAME }}:${{env.IMAGE_TAG}}

      # Step 7: Deploy the image to Azure Container Apps
      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name ${{ secrets.CONTAINER_APP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --image ${{ secrets.ACR_SERVER }}/${{ secrets.CONTAINER_APP_NAME }}:${{env.IMAGE_TAG}} \
            --set-env-vars \
                DB_CONNECTION=pgsql \
                DB_HOST=mypsqldb.postgres.database.azure.com \
                DB_PORT=5432 \
                DB_DATABASE=postgres \
                DB_USERNAME=laraadmin@mypsqldb \
                DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                APP_KEY=${{ secrets.APP_KEY }}
